package com.ltree.crs516.client;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.annotation.Resource;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ltree.crs516.client.Displayer;
import com.ltree.crs516.domain.IStation;


/**
 * A tab to hold profile data
 *
 * @author crs516 development team
 *
 */
public final class ProfileDataTab extends DisplayTab {

	private static final long serialVersionUID = 1L;
	
	private Logger logger = LoggerFactory.getLogger(getClass());
	
	private IStation station;

	/*Button for user to request scatter plots*/
	private JButton scatterPlotButton = new JButton("See Scatter Plots");

	@Override
//TODO 1: In the bonus add an @Resource annotation here to 
//inject profileDataDisplayer	
@	@Resource(name="profileDataDisplayer")
	public void setDisplayer(Displayer displayer) {
		super.setDisplayer(displayer);
	}
	
%TODO 1: (in bonus)<br/>@Resource(name="profileDataDisplayer")<br/><br/>
	/**
	 * Sole constructor
	 *
	 */
	public ProfileDataTab() {
		logger.debug("Initializing {}",getClass().getName());
		setLayout(new BorderLayout());
		this.add(new JScrollPane(textArea), BorderLayout.CENTER);
		/*Extra button so user can request scatter plots */
		JPanel buttonPanel = new JPanel();
		this.add(buttonPanel, BorderLayout.SOUTH);
		scatterPlotButton.addActionListener(new ScatterListener());
		buttonPanel.add(scatterPlotButton);
	}
	
	private class ScatterListener implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			ScatterDialog sd = new ScatterDialog(station);
			sd.pack();
			sd.setModal(true);
			sd.setVisible(true);
		}
	}

	/**
	 * Displays HTML text generated by the displayer in the
	 * textArea.
	 * @param station, the source of information to be displayed.
	 */
	@Override
	public void display(IStation station) {
		this.station = station;
		final String theDisplayString = displayer.createDisplayString(station);
		SwingUtilities.invokeLater(new Runnable(){

			@Override
			public void run() {
				textArea.setText(theDisplayString);
			}});
	}
	
}
